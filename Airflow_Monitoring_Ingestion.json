{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 1,
  "iteration": 1637606598485,
  "links": [],
  "panels": [
    {
      "datasource": "Airflow db",
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "mappings": [],
          "max": 1,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 80
              },
              {
                "color": "dark-green",
                "value": 90
              }
            ]
          },
          "unit": "percentunit"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 11,
        "x": 6,
        "y": 0
      },
      "id": 14,
      "options": {
        "reduceOptions": {
          "calcs": [
            "max"
          ],
          "fields": "/^success$/",
          "values": true
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "7.3.6",
      "targets": [
        {
          "format": "table",
          "group": [],
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "Select (count(ti.state) FILTER (WHERE ti.state = 'success')*1.0)/(Case When count(ti.state) = 0 Then 1 Else count(ti.state) End )*1.0 as Success \nfrom task_instance ti\ninner join dag_run dr\non ti.dag_id = dr.dag_id and ti.execution_date = dr.execution_date and run_id like 'scheduled%'\nwhere ti.execution_date  >= now() -  interval '15 day'\nand ti.dag_id in ($Dags)\nand lower(ti.task_id) like '%ingestao%'",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "duration"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "task_instance",
          "timeColumn": "execution_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "% Task Sucess (D-15)",
      "transparent": true,
      "type": "gauge"
    },
    {
      "cacheTimeout": null,
      "columns": [],
      "datasource": "Airflow db",
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "80%",
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 7
      },
      "id": 20,
      "links": [],
      "pageSize": null,
      "pluginVersion": "6.7.1",
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Task",
          "align": "center",
          "dateFormat": "YYYY-MM-DD",
          "pattern": "task_id",
          "type": "string"
        },
        {
          "alias": "Day",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Day",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-1",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 2,
          "pattern": "D-1",
          "rangeMaps": [
            {
              "from": "0.8",
              "text": "Atenção",
              "to": "0.99"
            },
            {
              "from": "0.9999999",
              "text": "Completo",
              "to": "1"
            },
            {
              "from": "0.0",
              "text": "Atenção",
              "to": "0.799999"
            }
          ],
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit",
          "valueMaps": [
            {
              "text": "",
              "value": ""
            }
          ]
        },
        {
          "alias": "D-2",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-2",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-3",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-3",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-4",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 1,
          "pattern": "D-4",
          "preserveFormat": false,
          "rangeMaps": [
            {
              "from": "",
              "text": "",
              "to": ""
            }
          ],
          "sanitize": false,
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit",
          "valueMaps": []
        },
        {
          "alias": "D-5",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-5",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-6",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-6",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-7",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 1,
          "pattern": "D-7",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-8",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-8",
          "sanitize": false,
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit",
          "valueMaps": [
            {
              "text": "",
              "value": ""
            },
            {
              "text": "",
              "value": ""
            }
          ]
        },
        {
          "alias": "D-9",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 1,
          "pattern": "D-9",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-10",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-10",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-11",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-11",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-12",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-12",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-13",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-13",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-14",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-14",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "D-15",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "D-15",
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "Select ti.task_id, \r\n(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() as date)) End as \"Day\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '1 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '1 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '1 Day' as date)) End as \"D-1\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '2 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '2 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '2 Day' as date)) End as \"D-2\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '3 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '3 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '3 Day' as date)) End as \"D-3\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '4 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '4 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '4 Day' as date)) End as \"D-4\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '5 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '5 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '5 Day' as date)) End as \"D-5\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '6 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '6 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '6 Day' as date)) End as \"D-6\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '7 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '7 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '7 Day' as date)) End as \"D-7\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '8 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '8 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '8 Day' as date)) End as \"D-8\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '9 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '9 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '9 Day' as date)) End as \"D-9\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '4 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '10 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '10 Day' as date)) End as \"D-10\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '11 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '11 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '11 Day' as date)) End as \"D-11\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '12 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '12 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '4 Day' as date)) End as \"D-12\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '13 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '13 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '13 Day' as date)) End as \"D-13\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '14 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '14 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '14 Day' as date)) End as \"D-14\"\r\n,(count(ti.state) filter (Where ti.state = 'success' and cast(ti.execution_date as date) = cast(now() - interval '15 Day' as date))*1.0) / \r\nCase When Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '15 Day' as date)) = 0 then 1 \r\nElse  Count(ti.state) filter (Where cast(ti.execution_date as date) = cast(now() - interval '15 Day' as date)) End as \"D-15\"\r\nfrom task_instance ti\r\ninner join dag_run dr\r\non ti.dag_id = dr.dag_id and ti.execution_date = dr.execution_date and run_id like 'scheduled%'\r\nwhere ti.execution_date >= now() - interval '15 day' and ti.execution_date < now() - interval '1 day'\r\nand lower(ti.task_id) like '%ingestao%'\r\nand ti.dag_id in ($Dags)\r\ngroup by ti.task_id",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "duration"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "task_instance",
          "timeColumn": "execution_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Task Status (D-15)",
      "transform": "table",
      "transparent": true,
      "type": "table-old"
    },
    {
      "columns": [],
      "datasource": "Airflow db",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "80%",
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 14
      },
      "id": 22,
      "links": [],
      "pageSize": 5,
      "showHeader": true,
      "sort": {
        "col": 1,
        "desc": true
      },
      "styles": [
        {
          "alias": "Time",
          "align": "auto",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "link": true,
          "linkTargetBlank": true,
          "linkTooltip": "",
          "linkUrl": "${__cell:raw}",
          "mappingType": 2,
          "pattern": "log",
          "preserveFormat": false,
          "sanitize": false,
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "center",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "#C4162A",
            "#FF9830"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 2,
          "pattern": "status_job",
          "preserveFormat": false,
          "rangeMaps": [
            {
              "from": "1",
              "text": "FAILED",
              "to": "1"
            }
          ],
          "sanitize": false,
          "thresholds": [
            "1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "failed",
              "value": "failed"
            }
          ]
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "SELECT \r\n dr.dag_id as NOME_DAG\r\n,LEFT(RIGHT(dr.run_id,25),10)  AS DATA\r\n,LEFT(RIGHT(dr.run_id,14),8)  AS HORARIO\r\n,ti.task_id as NOME_TASK_AIRFLOW\r\n--,ti.state as STATUS_JOB\r\n,case when ti.state = 'failed' then 1 else 0 end STATUS_JOB\r\n,concat('http://00.00.000.00:0000/log?execution_date=',REPLACE(REPLACE(REPLACE(Cast(dr.execution_date as varchar),':','%3A'),'+','%2B'),' ','T'),'&task_id=',cast(ti.task_id as varchar),'&dag_id=',cast(dr.dag_id as varchar)) as log\r\nFROM dag_run as dr\r\nINNER JOIN\r\n(\r\n    SELECT dag_id, task_id,\r\n    state, execution_date\r\n    FROM task_instance\r\n    WHERE state = 'failed'  and execution_date > now() - interval '7 day' and dag_id in ($Dags)\r\n  ) as ti\r\nON dr.dag_id = ti.dag_id AND dr.execution_date = ti.execution_date and run_id like 'scheduled%'\r\nWhere lower(ti.task_id) like '%ingestao%'\r\norder by dr.dag_id, dr.execution_date",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "duration"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "task_instance",
          "timeColumn": "execution_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Jobs Failed",
      "transform": "table",
      "transparent": true,
      "type": "table-old"
    },
    {
      "cacheTimeout": null,
      "columns": [],
      "datasource": "Airflow db",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "80%",
      "gridPos": {
        "h": 9,
        "w": 24,
        "x": 0,
        "y": 23
      },
      "id": 6,
      "links": [],
      "pageSize": null,
      "pluginVersion": "6.7.1",
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Time",
          "align": "auto",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Conclusão",
          "align": "center",
          "colorMode": "value",
          "colors": [
            "#F2CC0C",
            "#37872D",
            "#C4162A"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "mappingType": 2,
          "pattern": "percentual_conclusao",
          "rangeMaps": [
            {
              "from": "0.8",
              "text": "Atenção",
              "to": "0.99"
            },
            {
              "from": "0.9999999",
              "text": "Completo",
              "to": "1"
            },
            {
              "from": "0.0",
              "text": "Atenção",
              "to": "0.799999"
            }
          ],
          "thresholds": [
            "1"
          ],
          "type": "string",
          "unit": "none",
          "valueMaps": [
            {
              "text": "",
              "value": ""
            }
          ]
        },
        {
          "alias": "Data",
          "align": "left",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "start_date",
          "thresholds": [],
          "type": "date",
          "unit": "short"
        },
        {
          "alias": "Nome_Dag",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "dag_id",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Status_Dag",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 1,
          "pattern": "state",
          "preserveFormat": false,
          "rangeMaps": [
            {
              "from": "",
              "text": "",
              "to": ""
            }
          ],
          "sanitize": false,
          "thresholds": [],
          "type": "string",
          "unit": "short",
          "valueMaps": []
        },
        {
          "alias": "Percentual_Conclusão",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "percentual_conclusao_num",
          "thresholds": [],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "Total_Jobs",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "total_tasks",
          "thresholds": [],
          "type": "string",
          "unit": "none"
        },
        {
          "alias": "Jobs_Executando",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "#E0B400",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "link": false,
          "mappingType": 1,
          "pattern": "running",
          "thresholds": [
            ""
          ],
          "type": "number",
          "unit": "none"
        },
        {
          "alias": "Job_Completados",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "#E0B400",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "success",
          "sanitize": false,
          "thresholds": [
            "150",
            "200"
          ],
          "type": "string",
          "unit": "none",
          "valueMaps": [
            {
              "text": "",
              "value": ""
            },
            {
              "text": "",
              "value": ""
            }
          ]
        },
        {
          "alias": "Jobs_Falhados",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "#37872D",
            "#C4162A",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "link": true,
          "mappingType": 1,
          "pattern": "failed",
          "thresholds": [
            "1"
          ],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Outros_Status",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "#E02F44",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "other_status",
          "thresholds": [
            "2",
            "10"
          ],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Warning",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "waring",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Crítico",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "critical",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "job",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Status",
          "align": "center",
          "colorMode": "cell",
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "#37872D",
            "#C4162A"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "failed2",
          "preserveFormat": false,
          "sanitize": false,
          "thresholds": [
            "0",
            "1"
          ],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "Necessita intervenção Manual",
              "value": "1"
            },
            {
              "text": "Necessita intervenção Manual",
              "value": "2"
            },
            {
              "text": "Necessita intervenção Manual",
              "value": "3"
            },
            {
              "text": "Nenhum job falhado",
              "value": "0"
            },
            {
              "text": "Necessita intervenção Manual",
              "value": "4"
            },
            {
              "text": "Necessita intervenção Manual",
              "value": "5"
            }
          ]
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "none"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "with \r\ndags_processar as (\r\n\tselect * from public.dag ),--where dag_id in ('DataMart', 'CDO', 'Campanhas')),\r\ntask_avg as (\r\n\t-- media de duracao por task\r\n\tselect ti.dag_id, ti.task_id, round(avg(ti.duration)) avg_duration_seconds, count(1) total_execution_times \r\n\tfrom dags_processar dp \r\n\tinner join task_instance  ti on ti.dag_id  = dp.dag_id\r\n\twhere ti.execution_date  >= execution_date -  interval '60 day'\r\n\tand   ti.state  = 'success'\r\n\tgroup by ti.dag_id, ti.task_id\r\n\torder by 1, 2),\r\ntmp as(\r\n\tselect dr.*, rank() over (partition by dr.dag_id  order by id desc) as rk from dag_run dr \r\n\tinner join dags_processar dp on dp.dag_id = dr.dag_id and dr.run_id like 'scheduled%' ),\r\ndags_last_execution as (\r\n\tselect * from tmp where rk = 1),\r\nlast_execution_tasks as (\t\r\n--- tasks da ultima execucao\r\n\tselect ti.dag_id \r\n\t\t  ,ti.task_id \r\n\t\t  ,ti.state \r\n\t\t  ,ti.start_date \r\n\t\t  ,round(EXTRACT(EPOCH FROM (coalesce(ti.end_date, current_timestamp) - ti.start_date ))) as last_duration \r\n\tfrom dags_last_execution dle \r\n\tinner join task_instance ti on dle.dag_id = ti.dag_id  and ti.execution_date  = dle.execution_date),\r\ntemp_last_execution_rules as (\r\n\tselect let.dag_id, let.task_id, let.state,\r\n\t\tcase when  let.last_duration> 900 and let.last_duration >= ta.avg_duration_seconds*1.3 and total_execution_times > 10 then 'CRITICAL'\r\n                     when  let.last_duration> 180 and let.last_duration >= ta.avg_duration_seconds*1.3 and total_execution_times > 10 then 'WARNING'\r\n\t\t     \t\telse 'OK'\r\n\t\tend message,\r\n\t\tlet.last_duration,\r\n\t\tta.avg_duration_seconds,\r\n\t\ttotal_execution_times,\r\n\t\tcase when  let.state = 'success' then ta.avg_duration_seconds- let.last_duration  else 0 end dif_between_avg_and_last\r\n\tfrom last_execution_tasks let \r\n\tleft join task_avg ta on let.dag_id = ta.dag_id and let.task_id = ta.task_id)\r\n--- ultima execuçao status das tasks\r\nselect ti.task_id, \r\n\t   dle.execution_date +  interval '1 day' start_date , \r\n\t   dle.state,\r\n\t    sum(avg_duration_seconds)   FILTER (WHERE ti.state = 'success') / sum(avg_duration_seconds) as percentual_conclusao,\r\n\t   sum(avg_duration_seconds)   FILTER (WHERE ti.state = 'success') / sum(avg_duration_seconds) as percentual_conclusao_num,\r\n\t   count(1)    as total_tasks,\r\n\t   count(1)   FILTER (WHERE ti.state = 'running') as running,\r\n\t   count(1)   FILTER (WHERE ti.state = 'success') as success,\r\n\t   count(1)   FILTER (WHERE ti.state = 'failed') as failed,\r\n\t   count(1)   FILTER (WHERE ti.state = 'failed') as failed2\r\n\t   --count(1)   FILTER (WHERE ti.state not in ('failed', 'success' ,'failed' )    ) as other_status,\r\n\t   --count(1)   filter (where ti.message = 'WARNING') as waring,\r\n\t   --count(1)   filter (where ti.message = 'CRITICAL') as critical,\r\n\t   --cast(avg(dif_between_avg_and_last) FILTER (WHERE ti.state = 'success')  as Integer) as speed\r\n\t \r\nfrom dags_last_execution dle \r\ninner join temp_last_execution_rules ti on dle.dag_id = ti.dag_id\r\nWhere ti.dag_id in ($Dags)\r\nand lower(ti.task_id) like '%ingestao%'\r\ngroup by ti.task_id, dle.execution_date,  dle.state",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "duration"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "task_instance",
          "timeColumn": "execution_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Task Status (Se há task falhadas no dia)",
      "transform": "table",
      "transparent": true,
      "type": "table-old"
    },
    {
      "cacheTimeout": null,
      "columns": [],
      "datasource": "Airflow db",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "80%",
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 32
      },
      "id": 4,
      "links": [],
      "pageSize": 4,
      "pluginVersion": "6.7.1",
      "showHeader": true,
      "sort": {
        "col": 2,
        "desc": false
      },
      "styles": [
        {
          "alias": "Time",
          "align": "auto",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "",
          "align": "",
          "colorMode": "value",
          "colors": [
            "rgba(50, 172, 45, 0.97)",
            "#C4162A",
            "rgba(245, 54, 54, 0.9)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "mappingType": 2,
          "pattern": "last_duration",
          "preserveFormat": true,
          "rangeMaps": [
            {
              "from": "0",
              "text": "OK",
              "to": "179"
            },
            {
              "from": "180",
              "text": "WARNING",
              "to": "899"
            },
            {
              "from": "900",
              "text": "CRITICAL",
              "to": "100000000000"
            }
          ],
          "sanitize": true,
          "thresholds": [
            "900"
          ],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "align": "auto",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "state",
          "thresholds": [],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "running",
              "value": "sucess"
            },
            {
              "text": "",
              "value": ""
            }
          ]
        },
        {
          "alias": "",
          "align": "center",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 0,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "\r\nwith \r\ndags_processar as (\r\n\tselect * from public.dag\r\n\t),--where dag_id  in ('DataMart', 'Campanhas', 'CDO')),\r\ntask_avg as (\r\n\t-- media de duracao por task\r\n\tselect ti.dag_id, ti.task_id, round(avg(ti.duration)) avg_duration_seconds, count(1) total_execution_times \r\n\tfrom dags_processar dp \r\n\tinner join task_instance  ti on ti.dag_id  = dp.dag_id\r\n\twhere ti.execution_date  >= execution_date -  interval '7 day'\r\n\tand   ti.state  = 'success'\r\n\tgroup by ti.dag_id, ti.task_id\r\n\torder by 1, 2),\r\ntmp as(\r\n\tselect dr.*, rank() over (partition by dr.dag_id  order by id desc) as rk from dag_run dr \r\n\tinner join dags_processar dp on dp.dag_id = dr.dag_id and dr.run_id like 'scheduled%' ),\r\ndags_last_execution as (\r\n\tselect * from tmp where rk = 1),\r\nlast_execution_tasks as (\t\r\n--- tasks da ultima execucao\r\n\tselect ti.dag_id \r\n\t\t  ,ti.task_id \r\n\t\t  ,ti.state \r\n\t\t  ,ti.start_date \r\n\t\t  ,round(EXTRACT(EPOCH FROM (coalesce(ti.end_date, current_timestamp) - ti.start_date ))) as last_duration \r\n\tfrom dags_last_execution dle \r\n\tinner join task_instance ti on dle.dag_id = ti.dag_id  and ti.execution_date  = dle.execution_date),\r\ntemp_last_execution_rules as (\r\n\tselect let.dag_id, let.task_id, let.state,\r\n\t\t--case when  let.last_duration> 900 and let.last_duration >= ta.avg_duration_seconds*1.3 and total_execution_times > 10 then 'CRITICAL' \r\n\t--\t\t when  let.last_duration> 180 and let.last_duration >= ta.avg_duration_seconds*1.3 and total_execution_times > 10 then 'WARNING'\r\n\t--\telse 'OK'\r\n\t--\tend message,\r\n\t\tlet.last_duration,\r\n\t\tta.avg_duration_seconds,\r\n\t\ttotal_execution_times,\r\n\t\tcase when  let.state = 'success' then ta.avg_duration_seconds- let.last_duration  else 0 end dif_between_avg_and_last\r\n\tfrom last_execution_tasks let \r\n\tleft join task_avg ta on let.dag_id = ta.dag_id and let.task_id = ta.task_id)\r\n--- ultima execuçao status das tasks\r\nselect * from temp_last_execution_rules\r\nwhere dag_id in ($Dags) and state = 'running' and lower(task_id) like '%ingestao%'",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "duration"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "task_instance",
          "timeColumn": "execution_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "Tasks Running",
      "transform": "table",
      "transparent": true,
      "type": "table-old"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "Airflow db",
      "decimals": -1,
      "fieldConfig": {
        "defaults": {
          "custom": {},
          "links": []
        },
        "overrides": []
      },
      "fill": 10,
      "fillGradient": 9,
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "hiddenSeries": false,
      "id": 24,
      "legend": {
        "alignAsTable": true,
        "avg": true,
        "current": true,
        "hideEmpty": true,
        "hideZero": true,
        "max": true,
        "min": true,
        "rightSide": true,
        "show": true,
        "sideWidth": null,
        "sort": "max",
        "sortDesc": true,
        "total": false,
        "values": true
      },
      "lines": true,
      "linewidth": 1,
      "nullPointMode": "null",
      "options": {
        "alertThreshold": true
      },
      "percentage": false,
      "pluginVersion": "7.3.6",
      "pointradius": 2,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "format": "time_series",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": " SELECT\r\n EXTRACT (EPOCH from MAX(ti.end_date) - MIN(ti.start_date)) AS duration\r\n ,ti.end_date as \"time\"\r\n , ti.task_id as metric\r\n       --EXTRACT(EPOCH FROM (coalesce(ti.end_date, current_timestamp) - ti.start_date ))) as last_duration\r\nFROM  task_instance ti\r\ninner join dag_run dr\r\non ti.dag_id = dr.dag_id and ti.execution_date = dr.execution_date and run_id like 'scheduled%'\r\n   WHERE  ti.dag_id in (Select dag_id From dag Where is_active = 'true')\r\nand  ti.state = 'success'\r\nand  ti.execution_date >= now() - interval '15 day'\r\nand lower(task_id) like '%ingestao%'\r\nand ti.dag_id in ($Dags)\r\nGROUP BY  ti.end_date, ti.TASK_ID\r\nORDER BY  ti.end_date DESC",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "duration"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "task_instance",
          "timeColumn": "execution_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "thresholds": [],
      "timeFrom": null,
      "timeRegions": [
        {
          "colorMode": "background6",
          "fill": false,
          "fillColor": "rgba(234, 112, 112, 0.12)",
          "line": false,
          "lineColor": "rgba(237, 46, 24, 0.60)",
          "op": "time"
        }
      ],
      "timeShift": null,
      "title": "Comparação de execuções (D-15)",
      "tooltip": {
        "shared": true,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "format": "dthms",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "dthms",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "cacheTimeout": null,
      "columns": [],
      "datasource": "Airflow db",
      "fieldConfig": {
        "defaults": {
          "custom": {}
        },
        "overrides": []
      },
      "fontSize": "80%",
      "gridPos": {
        "h": 6,
        "w": 24,
        "x": 0,
        "y": 44
      },
      "id": 16,
      "links": [],
      "pageSize": null,
      "pluginVersion": "6.7.1",
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Conclusão",
          "align": "center",
          "colorMode": "value",
          "colors": [
            "#C4162A",
            "#F2CC0C",
            "#37872D"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": true,
          "mappingType": 2,
          "pattern": "percent",
          "rangeMaps": [
            {
              "from": "0.8",
              "text": "Atenção",
              "to": "0.99"
            },
            {
              "from": "0.9999999",
              "text": "Completo",
              "to": "1"
            },
            {
              "from": "0.0",
              "text": "Atenção",
              "to": "0.799999"
            }
          ],
          "thresholds": [
            "0.8",
            "0.9"
          ],
          "type": "number",
          "unit": "percentunit",
          "valueMaps": [
            {
              "text": "",
              "value": ""
            }
          ]
        }
      ],
      "targets": [
        {
          "format": "table",
          "group": [],
          "hide": false,
          "metricColumn": "none",
          "rawQuery": true,
          "rawSql": "Select task_id,\nRound((count(state) FILTER (WHERE state = 'success')*1.0) / (Case when count(state) = 0 then 1.0 else count(state) end)*1.0,2) as Percent from task_instance\nwhere execution_date  >= now() -  interval '15 day'\nand dag_id in ($Dags)\ngroup by task_id\norder by 2",
          "refId": "A",
          "select": [
            [
              {
                "params": [
                  "duration"
                ],
                "type": "column"
              }
            ]
          ],
          "table": "task_instance",
          "timeColumn": "execution_date",
          "timeColumnType": "timestamp",
          "where": [
            {
              "name": "$__timeFilter",
              "params": [],
              "type": "macro"
            }
          ]
        }
      ],
      "timeFrom": null,
      "timeShift": null,
      "title": "% por Task Sucess (D-15)",
      "transform": "table",
      "transparent": true,
      "type": "table-old"
    }
  ],
  "refresh": false,
  "schemaVersion": 26,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "selected": false,
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Airflow db",
        "definition": "Select dag_id From public.dag Where is_active = 'true' and dag_id like 'Dev%'",
        "error": null,
        "hide": 0,
        "includeAll": true,
        "label": "Pesquisar por Dag",
        "multi": true,
        "name": "Dags",
        "options": [],
        "query": "Select dag_id From public.dag Where is_active = 'true' and dag_id like 'Dev%'",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 1,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "2021-11-09T07:00:10.822Z",
    "to": "2021-11-22T09:30:48.306Z"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ]
  },
  "timezone": "",
  "title": "Airflow Monitoring Ingestion",
  "uid": "e9JMc2CZz",
  "version": 29
}